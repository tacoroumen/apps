{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.zipline_container_name, "zipline") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}

{% set pg_config = {
  "user": values.zipline.db_user,
  "password": values.zipline.db_password,
  "database": values.consts.db_name,
  "volume": values.storage.postgres_data,
} %}
{% set postgres = tpl.deps.postgres(
  values.consts.postgres_container_name,
  "postgres",
  pg_config, perm_container
) %}

{% do c1.set_user(values.run_as.user, values.run_as.group) %}
{% do c1.depends.add_dependency(values.consts.postgres_container_name, "service_healthy") %}
{% do c1.healthcheck.set_test("tcp", values.network.web_port) %}
{% do c1.healthcheck.set_interval("10") %}
{% do c1.healthcheck.set_timeout("5") %}
{% do c1.healthcheck.set_retries(5) %}

{% do c1.environment.add_env("CORE_PORT", values.network.web_port) %}
{% do c1.environment.add_env("DATABASE_URL", postgres.get_url("postgres")) %}
{% do c1.environment.add_env("CORE_SECRET", values.zipline.core_secret) %}

{% set perms_config = {"uid": values.run_as.user, "gid": values.run_as.group, "mode": "check"} %}
{% do c1.ports.add_port(values.network.web_port, values.network.web_port) %}
{% do c1.add_storage(values.ix_volumes["zipline-uploads"], values.storage["zipline-uploads"]) %}
{% do perm_container.add_or_skip_action("zipline-uploads", values.storage["zipline-uploads"], perms_config) %}
{% do c1.add_storage(values.ix_volumes["zipline-public"], values.storage["zipline-public"]) %}
{% do perm_container.add_or_skip_action("zipline-public", values.storage["zipline-public"], perms_config) %}
{% do c1.add_storage(values.ix_volumes["zipline-themes"], values.storage["zipline-themes"]) %}
{% do perm_container.add_or_skip_action("zipline-themes", values.storage["zipline-themes"], perms_config) %}


{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do c1.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% if not values.network.host_network %}
  {% do tpl.portals.add_portal({"port": values.network.web_port}) %}
{% endif %}

{{ tpl.render() | tojson }}
